name: Instance
type: datatype
summary: |
  Holds the constructor for Instances.
description: |
  The `Class.Instance` data type holds the constructor for `Class.Instance`
  objects.
code_samples:
tags: []
deprecation_message: ''
constructors:
  - name: Instance.new
    summary: Returns an `Class.Instance` of the specified class.
    description: |-
      Creates a new `Class.Instance` of type `className`.

      Note that when the `Class.Instance.Parent|Parent` of an object is set,
      Luau listens to a variety of different property changes for replication,
      rendering, and physics. For performance reasons, it's recommended to set
      the instance's `Class.Instance.Parent|Parent` property **last** when
      creating new objects, instead of specifying the second argument (`parent`)
      of this constructor.

      ```lua
      -- Set new instance's parent last (recommended)
      local part = Instance.new("Part")
      part.Position = Vector3.new(0, 10, 0)
      part.Parent = workspace

      -- Set new instance's parent in constructor (discouraged)
      local part = Instance.new("Part", workspace)
      part.Position = Vector3.new(0, 10, 0)
      ````
    parameters:
      - name: className
        type: string
        default:
        summary: |
          Class name of the new instance to create.
      - name: parent
        type: Instance?
        default:
        summary: |
          Optional object to parent the new instance to. Not recommended for performance reasons (see description above).
    code_samples: []
    tags: []
    deprecation_message: ''
  - name: Instance.fromExisting
    summary: |
      Returns an `Class.Instance` which is a copy of an existing
      `Class.Instance`.
    description: |
      Creates a new object with the same type and property values as an existing
      object. In most cases using `Class.Instance:Clone()` is more appropriate,
      but this constructor is useful when implementing lowâ€‘level libraries or
      systems.

      There are two behavioral differences between this constructor and the
      `Class.Instance:Clone()` method:

      - This constructor will not copy any of the descendant `Class.Instance|Instances` parented to the existing object.

      - This constructor will return a new object even if the existing object had `Class.Instance.Archivable` set to `false`.
    parameters:
      - name: existingInstance
        type: Instance
        default:
        summary: |
          The existing `Class.Instance` to copy property values from.
    code_samples: []
    tags: []
    deprecation_message: ''
constants: []
properties:
methods:
functions:
math_operations:
