name: Faces
type: datatype
summary: |
  A data type containing six booleans, each representing a face of a
  `Class.BasePart`.
description: |
  The `Datatype.Faces` data type contains six booleans representing whether a
  feature is enabled for each face (`Enum.NormalId`) of a Part. In other words,
  this contains a boolean for each axes (X/Y/Z) in both directions
  (positive/negative). The `Class.Handles` object uses this data type to enable
  whether a direction has a visible handle on a Part's face.

  ```lua
  local handles = Instance.new("Handles")
  handles.Faces = Faces.new(Enum.NormalId.Front, Enum.NormalId.Left)
  ```

  Like most data types on Roblox, the Faces data type is immutable: you cannot
  assign to its properties once created.
code_samples:
tags: []
deprecation_message: ''
constructors:
  - name: Faces.new
    summary: Returns a Faces with the corresponding face of each passed `Enum.NormalId` as `true`.
    description: |-
      Creates a new Faces given some number of `Enum.NormalId` as arguments. Each NormalId provided indicates the property of the same name in the new Faces will be true.

      - The `Library.table.unpack()` function can be used to unpack a table of NormalId to be included.
      - Passing values that are not a `Enum.NormalId` will do nothing; they are ignored silently.
    parameters:
      - name: normalIds...
        type: Tuple
        default:
        summary: ''
    code_samples: []
    tags: []
    deprecation_message: ''
constants: []
properties:
  - name: Faces.Top
    type: bool
    summary: |
      Whether the top face is included.
    description: |
      Whether the top face is included.
    code_samples: []
    tags: []
    deprecation_message: ''
  - name: Faces.Bottom
    type: bool
    summary: |
      Whether the bottom face is included.
    description: |
      Whether the bottom face is included.
    code_samples: []
    tags: []
    deprecation_message: ''
  - name: Faces.Left
    type: bool
    summary: |
      Whether the left face is included.
    description: |
      Whether the left face is included.
    code_samples: []
    tags: []
    deprecation_message: ''
  - name: Faces.Right
    type: bool
    summary: |
      Whether the right face is included.
    description: |
      Whether the right face is included.
    code_samples: []
    tags: []
    deprecation_message: ''
  - name: Faces.Back
    type: bool
    summary: |
      Whether the back face is included.
    description: |
      Whether the back face is included.
    code_samples: []
    tags: []
    deprecation_message: ''
  - name: Faces.Front
    type: bool
    summary: |
      Whether the front face is included.
    description: |
      Whether the front face is included.
    code_samples: []
    tags: []
    deprecation_message: ''
methods:
functions:
math_operations:
