name: Animation
type: class
category: Animations
memory_category: Animation
summary: |
  References an animation asset which can be loaded by an
  `Class.AnimationController`.
description: |
  An object that references an animation asset
  (`Class.Animation.AnimationId|AnimationId`) which can be loaded by an
  `Class.AnimationController`.

  #### Loading an Animation on Client or Server

  In order for `Class.AnimationTrack|AnimationTracks` to replicate correctly,
  it's important to know when they should be loaded on the client or on the
  server:

  - If an `Class.Animator` is a descendant of a `Class.Humanoid` or
    `Class.AnimationController` in a player's `Class.Player.Character`,
    animations started on that player's client will be replicated to the server
    and other clients.

  - If the `Class.Animator` is **not** a descendant of a player character, its
    animations must be loaded and started on the server to replicate.

  The `Class.Animator` object must be initially created on the server and
  replicated to clients for animation replication to work at all. If an
  `Class.Animator` is created locally, then
  `Class.AnimationTrack|AnimationTracks` loaded with that `Class.Animator` will
  not replicate.

  See also [Animation Editor](../../../animation/editor.md) and
  [Using Animations](../../../animation/using.md) to learn how to create and add
  pre-built or custom animations to your game.
code_samples:
inherits:
  - Instance
tags: []
deprecation_message: ''
properties:
  - name: Animation.AnimationId
    summary: |
      Asset ID of the animation an `Class.Animation` object is referencing.
    description: |
      This property is the asset ID of the animation an `Class.Animation` object
      is referencing. Once an animation has been created and uploaded to Roblox,
      the ID can be copied from the
      [Creator Dashboard](https://create.roblox.com/dashboard/creations?activeTab=Animation).

      Note that the animation will need to be loaded onto an
      `Class.AnimationTrack` in order to play it.
    code_samples:
    type: ContentId
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Animation
    writeCapabilities: []
methods: []
events: []
callbacks: []
