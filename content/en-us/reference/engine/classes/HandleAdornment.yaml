# This file is automatically generated. Please don't edit it manually.
# To submit a bug report on the content, see
# https://devforum.roblox.com/c/bug-reports/documentation-issues/72

name: HandleAdornment
type: class
memory_category: Instances
summary: |
  An abstract class inherited by 3D handle adornments.
description: |
  `HandleAdornment` is an abstract class inherited by 3D handle adornments. If
  parented to a player's `Class.PlayerGui` or the `Class.CoreGui`, handles can
  listen to input events for purposes such as making dragger tools.
code_samples: []
inherits:
  - PVAdornment
descendants:
  - BoxHandleAdornment
  - ConeHandleAdornment
  - CylinderHandleAdornment
  - ImageHandleAdornment
  - LineHandleAdornment
  - SphereHandleAdornment
  - WireframeHandleAdornment
tags:
  - NotCreatable
deprecation_message: ''
properties:
  - name: HandleAdornment.AdornCullingMode
    summary: |
      Determines whether to automatically cull the adornment.
    description: |
      This property determines whether to automatically cull the adornment based
      on distance from the camera.
    code_samples: []
    type: AdornCullingMode
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Basic
      - UI
  - name: HandleAdornment.AlwaysOnTop
    summary: |
      Forces this adornment to render on top of all 3D objects in the workspace.
    description: |
      If `true`, forces this adornment to render on top of all 3D objects in the
      workspace. As an exception, setting `Class.HandleAdornment.ZIndex|ZIndex`
      to `-1` will override an `Class.HandleAdornment.AlwaysOnTop|AlwaysOnTop`
      value of `true` and cause the adornment to appear either in front of or
      behind other adornments and objects based on their relative position in
      the 3D space.
    code_samples: []
    type: boolean
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Basic
      - UI
  - name: HandleAdornment.CFrame
    summary: |
      The position and rotation of the object relative to its
      `Class.PVAdornment.Adornee`.
    description: |
      `Datatype.CFrame` position and rotation relative to its
      `Class.PVAdornment.Adornee`, applied after any translations due to
      `Class.HandleAdornment.SizeRelativeOffset|SizeRelativeOffset`.
    code_samples: []
    type: CFrame
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Basic
      - UI
  - name: HandleAdornment.SizeRelativeOffset
    summary: |
      The positional offset of the adornment based on the adornee's
      `Class.BasePart.Size`.
    description: |
      By default, an adornment draws in the center of its
      `Class.HandleAdornment.Adornee|Adornee`, but this property shifts the
      adornment's relative position based on the adornee's
      `Class.BasePart.Size`.

      Note that the units of
      `Class.HandleAdornment.SizeRelativeOffset|SizeRelativeOffset` are a
      **scale** based on the size of the adornee itself, such that a value of
      `1` will move the adornment to the corresponding edge of the adornee. For
      example, a value of `Datatype.Vector3.new(0, 1, 0)` will shift the
      adornment to the exact top of its adornee.
    code_samples: []
    type: Vector3
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Basic
      - UI
  - name: HandleAdornment.ZIndex
    summary: |
      Determines the draw order of this `Class.HandleAdornment` when
      `Class.HandleAdornment.AlwaysOnTop|AlwaysOnTop` is `true`.
    description: |
      Only applies if `Class.HandleAdornment.AlwaysOnTop|AlwaysOnTop` is `true`
      and determines the draw order of this `Class.HandleAdornment` relative to
      other adornments. It does not relate to the
      `Class.GuiObject.ZIndex|ZIndex` property for `Class.GuiObject|GuiObjects`.

      Valid values are from `-1` to `10` with higher values drawing on top (in
      front) of lesser values. This drawing order will be respected even if an
      adornment is in front of or behind another adornment in the 3D space.

      As an exception, setting `Class.HandleAdornment.ZIndex|ZIndex` to `-1` or
      `Class.HandleAdornment.AlwaysOnTop|AlwaysOnTop` to `false` will cause the
      adornment to appear either in front of or behind other adornments and
      objects based on their relative position in the 3D space.
    code_samples: []
    type: int
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Basic
      - UI
methods: []
events:
  - name: HandleAdornment.MouseButton1Down
    summary: |
      Fires when a player presses down on their left mouse button while hovering
      over the adornment.
    description: |
      This event fires when a player presses down their left mouse button while
      hovering over the adornment. Only fires if the adornment is parented to a
      player's `Class.PlayerGui` or the `Class.CoreGui`.
    code_samples: []
    parameters: []
    tags: []
    deprecation_message: ''
    security: None
    capabilities:
      - Basic
      - UI
  - name: HandleAdornment.MouseButton1Up
    summary: |
      Fires when a player releases their left mouse button while hovering over
      the adornment.
    description: |
      This event fires when a player releases their left mouse button while
      hovering over the adornment. Only fires if the adornment is parented to a
      player's `Class.PlayerGui` or the `Class.CoreGui`.
    code_samples: []
    parameters: []
    tags: []
    deprecation_message: ''
    security: None
    capabilities:
      - Basic
      - UI
  - name: HandleAdornment.MouseEnter
    summary: |
      Fires when a player moves their mouse over the adornment.
    description: |
      This event fires when a player moves their mouse over the adornment. Only
      fires if the adornment is parented to a player's `Class.PlayerGui` or the
      `Class.CoreGui`.
    code_samples: []
    parameters: []
    tags: []
    deprecation_message: ''
    security: None
    capabilities:
      - Basic
      - UI
  - name: HandleAdornment.MouseLeave
    summary: |
      Fires when a player moves their mouse out of the adornment.
    description: |
      This event fires when a player moves their mouse out of the adornment.
      Only fires if the adornment is parented to a player's `Class.PlayerGui` or
      the `Class.CoreGui`.
    code_samples: []
    parameters: []
    tags: []
    deprecation_message: ''
    security: None
    capabilities:
      - Basic
      - UI
callbacks: []
