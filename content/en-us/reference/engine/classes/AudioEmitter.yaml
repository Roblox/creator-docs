name: AudioEmitter
type: class
category:
memory_category: Internal
summary: |
  Emits audio streams into the world.
description: |
  `Class.AudioEmitter` emits audio streams into the world. It provides a single
  **Input** pin that can be connected to by one or more `Class.Wire|Wires`. Any
  streams wired to an `Class.AudioEmitter` get broadcasted into the world from
  the emitter's parent's position. If the parent is an `Class.Attachment`,
  `Class.Camera`, or `Class.PVInstance`, the parent's world-position will be
  used. If the parent is not one of these classes, the `Class.AudioEmitter` is
  effectively silent.

  `Class.AudioEmitter|AudioEmitters` are heard by
  `Class.AudioListener|AudioListeners` in order to implement 3D spatialization.
code_samples:
  - audio-wiring---multi-emission
inherits:
  - Instance
tags:
  - NotBrowsable
deprecation_message: ''
properties:
  - name: AudioEmitter.AudioInteractionGroup
    summary: |
      Controls which `Class.AudioListener|AudioListeners` are capable of hearing
      this `Class.AudioEmitter`.
    description: |
      If an `Class.AudioEmitter` and an `Class.AudioListener` share an
      interaction group, then the listener is capable of hearing the emitter.
    code_samples: []
    type: string
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Interactions
    serialization:
      can_load: true
      can_save: true
  - name: AudioEmitter.DistanceAttenuation
    summary: |
      Represents how the perceived volume of the emitted sound changes as the
      distance between a `Class.AudioListener` and the `Class.AudioEmitter`
      increases.
    description: |
      Represents a volume-over-distance curve that affects how loudly a
      `Class.AudioListener` will hear the `Class.AudioEmitter`, based on the
      distance between them.

      This property is internal and can't be accessed by scripts; it exists to
      support replication. See
      `Class.AudioEmitter:SetDistanceAttenuation()|SetDistanceAttenuation()` for
      usage details.
    code_samples: []
    type: BinaryString
    tags: []
    deprecation_message: ''
    security:
      read: RobloxSecurity
      write: RobloxSecurity
    thread_safety: ReadSafe
    category: Emission
    serialization:
      can_load: true
      can_save: true
methods:
  - name: AudioEmitter:GetConnectedWires
    summary: ''
    description: ''
    code_samples: []
    parameters:
      - name: pin
        type: string
        default:
        summary: ''
    returns:
      - type: Objects
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: AudioEmitter:GetDistanceAttenuation
    summary: |
      Gets the distance attenuation curve that the `Class.AudioEmitter` is
      using, or an empty table if it's using the default curve.
    description: |
      Returns a table mapping distance to volume. Keys are numbers greater than
      or equal to 0, while values are numbers between 0 and 1 (inclusive)
      describing how volume attenuates over distance. This method returns an
      empty table if the default distance attenuation curve is being used.
    code_samples: []
    parameters: []
    returns:
      - type: Dictionary
        summary: ''
    tags:
      - CustomLuaState
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: AudioEmitter:SetDistanceAttenuation
    summary: |
      Sets the distance attenuation curve that the `Class.AudioEmitter` should
      use, or uses an inverse rolloff curve if none is provided.
    description: |
      Sets a volume-over-distance curve that affects how loudly a
      `Class.AudioListener` will hear the `Class.AudioEmitter`, based on the
      distance between them.

      The curve is represented by a table mapping distance keys to volume
      values. Keys are expected to be unique numbers greater than or equal to 0,
      while values are expected to be numbers between 0 and 1 (inclusive).
      Tables containing up to 400 key-value pairs are supported.

      The volume of the `Class.AudioEmitter` from the perspective of a
      `Class.AudioListener` at a distance `d` is determined by linearly
      interpolating between the volume levels for the points on the curve whose
      distance values are directly above and below `d`. If there is either no
      point below `d` or no point above `d`, the volume level of the other point
      is chosen. Essentially, the curve is a sequence of points connected by
      straight lines, and beyond its left and right endpoints the curve extends
      outward infinitely at their respective volume levels.

      If the table is empty or `nil`, the `Class.AudioEmitter` defaults to using
      a distance attenuation curve determined by the inverse-square law.
    code_samples:
      - audio-wiring---custom-distance-attenuation
    parameters:
      - name: curve
        type: Dictionary
        default:
        summary: ''
    returns:
      - type: void
        summary: ''
    tags:
      - CustomLuaState
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
events: []
callbacks: []
