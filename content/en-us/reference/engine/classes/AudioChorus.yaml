name: AudioChorus
type: class
category:
memory_category: Internal
summary: |
  Makes an audio stream sound more voluminous. If applied to a single voice, it
  may sound like multiple voices.
description: |
  `Class.AudioChorus` makes an audio stream sound more voluminous. It provides
  one **Input** pin and one **Output** pin which can be connected to/from by
  `Class.Wire|Wires`.

  `Class.AudioChorus` is implemented by duplicating the input stream and
  modulating the pitch of several delayed copies so that the overall result
  sounds like a cloud of streams. If applied to a single voice, it may sound
  like multiple voices.
code_samples: []
inherits:
  - Instance
tags: []
deprecation_message: ''
properties:
  - name: AudioChorus.Bypass
    summary: |
      Whether audio streams are passed-through unaffected by this effect.
    description: |
      If `true`, audio streams are passed-through unaffected by this effect.
    code_samples: []
    type: bool
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
  - name: AudioChorus.Depth
    summary: |
      Controls the maximum delay time of the copied streams in the chorus
      effect.
    description: |
      Controls how strong the chorus effect is by changing the maximum delay
      time of the copy streams. Ranges from 0 to 1 which corresponds to 0 to 100
      milliseconds of maximum delay.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
  - name: AudioChorus.Mix
    summary: |
      Controls the balance of plain input stream to modified output stream.
    description: |
      Controls the balance of plain input stream to modified output stream.
      Ranges from 0 to 1.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
  - name: AudioChorus.Rate
    summary: |
      Controls the rate of pitch modulations.
    description: |
      Frequency controlling the rate of pitch modulations, in hertz. Ranges from
      0 to 20.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
methods:
  - name: AudioChorus:GetConnectedWires
    summary: |
      Returns an array of `Class.Wire|Wires` that are connected to the specified
      pin.
    description: |
      Returns an array of `Class.Wire|Wires` that are connected to the specified
      pin. `Class.AudioChorus` has one "Input" pin and one "Output" pin.
    code_samples: []
    parameters:
      - name: pin
        type: string
        default:
        summary: ''
    returns:
      - type: Instances
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
events:
  - name: AudioChorus.WiringChanged
    summary: |
      Fires when another instance is connected to or disconnected from the
      `Class.AudioChorus` via a `Class.Wire`.
    description: |
      Event that fires after a `Class.Wire` becomes connected or disconnected,
      and that `Class.Wire` is now or was previously connected to a pin on the
      `Class.AudioChorus` and to some other wirable instance.
    code_samples: []
    parameters:
      - name: connected
        type: bool
        default:
        summary: |
          Whether the instance got connected or disconnected.
      - name: pin
        type: string
        default:
        summary: |
          The pin on the `Class.AudioChorus` that the `Class.Wire` targets.
      - name: wire
        type: Wire
        default:
        summary: |
          The `Class.Wire` between the `Class.AudioChorus` and the other
          instance.
      - name: instance
        type: Instance
        default:
        summary: |
          The other instance that is or was connected through the `Class.Wire`.
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
callbacks: []
