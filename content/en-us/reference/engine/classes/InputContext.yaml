name: InputContext
type: class
memory_category: Instances
summary: |
  Collection of actions which holds related actions and defines how they
  interact with other contexts/actions.
description: |
  An `InputContext` is a collection of actions which holds related
  `Class.InputAction|InputActions` and defines how they interact with other
  contexts and actions. Nested `InputContext` instances will have no effect and
  ordering/priority is managed through `Class.InputContext.Enabled|Enabled`,
  `Class.InputContext.Priority|Priority`, and `Class.InputContext.Sink|Sink`.
code_samples: []
inherits:
  - Instance
tags:
  - NotBrowsable
deprecation_message: ''
properties:
  - name: InputContext.Enabled
    summary: |
      Determines if this `InputContext` is enabled or not.
    description: |
      Determines if this `InputContext` is enabled or not. When `false`, all of
      the descendant actions of the context do not receive any signals except
      when `Enabled` is toggled from `true` to `false`, in which case a final
      "end" signal is triggered if a key is pressed or a two-directional input
      is not zero.
    code_samples: []
    type: boolean
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Behavior
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Input
    writeCapabilities: []
  - name: InputContext.Priority
    summary: |
      The priority level at which the context should be run.
    description: |
      The priority level at which the context should be run (higher priority
      `InputContext` instances run before lower ones).
    code_samples: []
    type: int
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Behavior
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Input
    writeCapabilities: []
  - name: InputContext.Sink
    summary: |
      Determines whether input bindings of lower priority will be processed.
    description: |
      When `Sink` is set to `true`, inputs will not be processed for connected
      `Class.InputAction` bindings within contexts of lower
      `Class.InputContext.Priority|Priority`. Contexts with the same priority
      will receive the input.

      For example, if multiple contexts contain an `Class.InputAction` with a
      binding to `Enum.KeyCode.E` and a higher priority context has `Sink` set
      to `true`, the lower priority contexts will not receive the input signal
      for `Enum.KeyCode.E` and will fire no events for it.
    code_samples: []
    type: boolean
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Behavior
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Input
    writeCapabilities: []
methods: []
events: []
callbacks: []
