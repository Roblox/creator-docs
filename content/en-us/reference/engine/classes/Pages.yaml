# This file is automatically generated. Please don't edit it manually.
# To submit a bug report on the content, see
# https://devforum.roblox.com/c/bug-reports/documentation-issues/72

name: Pages
type: class
memory_category: Instances
summary: |
  An abstract class for pages objects.
description: |
  An object which is essentially a table of pages, each of which is a sorted
  list of the key/value pairs.
code_samples:
  - pages-iterator
inherits:
  - Instance
tags:
  - NotCreatable
  - NotReplicated
deprecation_message: ''
properties:
  - name: Pages.IsFinished
    summary: |
      Whether or not the current page is the last page available.
    description: |
      Whether or not the current page is the last page available.
    code_samples: []
    type: boolean
    tags:
      - ReadOnly
      - NotReplicated
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: false
      can_save: false
    capabilities: []
methods:
  - name: Pages:AdvanceToNextPageAsync
    summary: |
      Iterates to the next page in the pages object, if possible.
    description: |
      Iterates to the next page in the pages object, if possible. The request
      limit is the same of the endpoint originally called.
    code_samples: []
    parameters: []
    returns:
      - type: ()
        summary: ''
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
  - name: Pages:GetCurrentPage
    summary: |
      Returns the items on the current page. The keys in the item are determined
      by the source of this object.
    description: |
      Returns the items on the current page. The keys in the item are determined
      by the source of this object.
    code_samples: []
    parameters: []
    returns:
      - type: Array
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
events: []
callbacks: []
