name: GenerationService
type: class
category:
memory_category: Instances
summary: |
  Generate 3D objects from text prompts using Roblox's
  [Cube 3D foundation model](https://corp.roblox.com/newsroom/2025/03/introducing-roblox-cube).
description: |
  `GenerationService` lets you generate 3D objects from text prompts using
  Roblox's [Cube 3D foundation model](https://corp.roblox.com/newsroom/2025/03/introducing-roblox-cube).
code_samples:
  - GenerationService-ServerSideMeshGeneration
  - GenerationService-ClientSideMeshGeneration
inherits:
  - Instance
tags:
  - NotCreatable
  - Service
deprecation_message: ''
properties: []
methods:
  - name: GenerationService:GenerateMeshAsync
    summary: |
      Generates a new mesh from a text prompt and returns unique IDs to track
      and retrieve the result.
    description: |
      Generates a new mesh from a text prompt and returns unique IDs to track
      and retrieve the result. Mesh generation happens in two stages, with an
      initial non-textured mesh being generated first and the texture generated
      in the second stage. To retrieve more intermediate results, use the
      optional callback to retrieve the initial generated mesh before the
      texture has been created and applied.

      For a more detailed example, see
      [this demo experience](https://www.roblox.com/games/86571743597273/Mesh-Generation-Template).
      Click the **&ctdot;** button and **Edit in Studio**.

      - The `GenerateMeshAsync()` method triggers the mesh generation and returns
        the generation ID which can then be loaded with the
        `LoadGeneratedMeshAsync()` method after the generation process
        completes.
      - The `GenerateMeshAsync()` method can only be called on the server.
      - Requests are limited to 5 per minute, per experience.

    code_samples:
      - GenerationService-GenerateMeshAsync-BasicUsage
      - GenerationService-GenerateMeshAsync-WithIntermediateResultsCallback
      - GenerationService-GenerateMeshAsync-ServerSideGenerationWithErrorHandling
    parameters:
      - name: inputs
        type: Dictionary
        default:
        summary: |
          Mesh generation inputs. Must include a `Prompt` key with a string
          value describing the object to generate.
      - name: player
        type: Player
        default:
        summary: |
          The player requesting the generation.
      - name: options
        type: Dictionary
        default:
        summary: |
          Mesh generation options (none currently available).
      - name: intermediateResultCallback
        type: Function?
        default:
        summary: |
          Optional function that receives intermediate generations. The callback
          receives three parameters: `intermediateType` (an enum indicating the
          type of intermediate result), `generationId` (string), and `contextId`
          (string).
    returns:
      - type: Tuple
        summary: |
          A tuple of generation ID and context ID.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
  - name: GenerationService:LoadGeneratedMeshAsync
    summary: |
      Loads a generated mesh from RCC using the generation ID. The generated
      mesh is an `Class.MeshPart`.
    description: |
      Loads the mesh generated by `Class.GenerationService:GenerateMeshAsync()|GenerateMeshAsync()`
      using the `generationId` and returns a `Class.MeshPart` with the editable
      content. The resulting generation is then subject to `Class.EditableMesh`
      characteristics.

      For a more detailed example, see
      [this demo experience](https://www.roblox.com/games/86571743597273/Mesh-Generation-Template).
      Click the **&ctdot;** button and **Edit in Studio**.

      Currently, the `LoadGeneratedMeshAsync()` method can only be called on
      the client due to the restrictions on replicating editable meshes. This
      means that only one player will be able to see the generated mesh, as this
      function can only be called once per `generationId`.'

    code_samples:
      - GenerationService-LoadGeneratedMeshAsync-LoadAGeneratedMesh
    parameters:
      - name: generationId
        type: string
        default:
        summary: |
          The generation ID returned by
          `Class.GenerationService:GenerateMeshAsync()|GenerateMeshAsync()`.
    returns:
      - type: MeshPart
        summary: |
          The generated `Class.MeshPart`.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
events: []
callbacks: []
