# This file is automatically generated. Please don't edit it manually.
# To submit a bug report on the content, see
# https://devforum.roblox.com/c/bug-reports/documentation-issues/72

name: NumberValue
type: class
memory_category: Instances
summary: |
  A container object for a single double-precision floating point number.
description: |
  A `NumberValue` is an object whose purpose is to store a single
  [Luau number](https://luau.org/syntax#number-literals), defined to be
  [double-precision floating point number](https://en.wikipedia.org/wiki/Double-precision_floating-point_format),
  or more commonly known as a **double**. This stores a number in 64 bits (8
  bytes) using the IEEE 754 representation (1 sign bit, 11 exponent bits and 52
  fractional bits). Maximum and minimum values are
  &PlusMinus;1.7976931348623157e+308, with a range of &PlusMinus;2^53 for exact
  integer representations.

  Like all `Value` objects, this object stores a single value in the `Value`
  property. The `Changed` event fires with the new value being stored in the
  object, instead of a string representing the property being changed.
code_samples:
  - Changed-Event
inherits:
  - ValueBase
tags: []
deprecation_message: ''
properties:
  - name: NumberValue.Value
    summary: |
      Used to hold a double value.
    description: |
      Used to hold a double value.
    code_samples: []
    type: double
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities: []
methods: []
events:
  - name: NumberValue.Changed
    summary: |
      Fired whenever the `Class.NumberValue.Value` is changed.
    description: |
      This event fires whenever the `Class.NumberValue.Value` property changes.

      This event, like other changed events, can be used to track when an
      `NumberValue` changes and to track the different values that it may change
      to.

      For instance, this event can be useful in games that rely on
      `NumberValues` to track game states and values, such as item IDs.

      Equivalent changed events exist for similar objects, such as
      `Class.ObjectValue` and `Class.StringValue`, depending on what object type
      best suits the need.
    code_samples:
      - NumberValue-Changed1
    parameters:
      - name: value
        type: double
        default:
        summary: |
          The value after the change.
    tags: []
    deprecation_message: ''
    security: None
    capabilities: []
  - name: NumberValue.changed
    summary: ''
    description: ''
    code_samples: []
    parameters:
      - name: value
        type: double
        default:
        summary: ''
    tags:
      - Deprecated
    deprecation_message: |
      This event is a deprecated variant of `Class.NumberValue.Changed` which
      should be used instead.
    security: None
    capabilities: []
callbacks: []
