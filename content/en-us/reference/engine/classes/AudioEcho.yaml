name: AudioEcho
type: class
category:
memory_category: Internal
summary: |
  Overlays delayed copies of audio streams.
description: |
  `Class.AudioEcho` overlays delayed copies of audio streams. It provides one
  **Input** pin and one **Output** pin which can be connected to/from by
  `Class.Wire|Wires`.
code_samples: []
inherits:
  - Instance
tags: []
deprecation_message: ''
properties:
  - name: AudioEcho.Bypass
    summary: |
      Whether audio streams are passed-through unaffected by this effect.
    description: |
      If `true`, audio streams are passed-through unaffected by this effect.
    code_samples: []
    type: bool
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
  - name: AudioEcho.DelayTime
    summary: |
      The amount of time between echoes.
    description: |
      The amount of time between echoes, in seconds. Ranges from 0.001 to 5.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
  - name: AudioEcho.DryLevel
    summary: |
      Gain level determining how loud the original, unaltered audio stream will
      be.
    description: |
      Gain level, in decibels, determining how loud the original, unaltered
      audio stream will be. Ranges from -80 to 10.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
  - name: AudioEcho.Feedback
    summary: |
      How slowly echoes fade away.
    description: |
      Determines how slowly echoes fade away, with a range of 0 to 1. A value of
      0 means that only a single echo is heard, whereas a value of 1 means that
      old echoes never fully disappear.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
  - name: AudioEcho.RampTime
    summary: ''
    description: ''
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
  - name: AudioEcho.WetLevel
    summary: |
      Gain level determining how loud the echoed stream will be.
    description: |
      Gain level, in decibels, determining how loud the echoed stream will be.
      Ranges from -80 to 10.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Audio
    writeCapabilities: []
methods:
  - name: AudioEcho:GetConnectedWires
    summary: |
      Returns an array of `Class.Wire|Wires` that are connected to the specified
      pin.
    description: |
      Returns an array of `Class.Wire|Wires` that are connected to the specified
      pin. `Class.AudioEcho` has one "Input" pin and one "Output" pin.
    code_samples: []
    parameters:
      - name: pin
        type: string
        default:
        summary: ''
    returns:
      - type: Instances
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
events:
  - name: AudioEcho.WiringChanged
    summary: |
      Fires when another instance is connected to or disconnected from the
      `Class.AudioEcho` via a `Class.Wire`.
    description: |
      Event that fires after a `Class.Wire` becomes connected or disconnected,
      and that `Class.Wire` is now or was previously connected to a pin on the
      `Class.AudioEcho` and to some other wirable instance.
    code_samples: []
    parameters:
      - name: connected
        type: bool
        default:
        summary: |
          Whether the instance got connected or disconnected.
      - name: pin
        type: string
        default:
        summary: |
          The pin on the `Class.AudioEcho` that the `Class.Wire` targets.
      - name: wire
        type: Wire
        default:
        summary: |
          The `Class.Wire` between the `Class.AudioEcho` and the other instance.
      - name: instance
        type: Instance
        default:
        summary: |
          The other instance that is or was connected through the `Class.Wire`.
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
callbacks: []
