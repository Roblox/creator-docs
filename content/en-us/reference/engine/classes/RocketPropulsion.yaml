name: RocketPropulsion
type: class
memory_category: Instances
summary: |
  Applies a force so that an assembly follows and faces a target part.
description: |
  The `RocketPropulsion` object applies force on an assembly so that it both
  **follows** and **faces** a target. It acts like a hybrid of
  `Class.BodyPosition` and `Class.BodyGyro`. Unlike other
  `Class.BodyMover|BodyMovers`, `RocketPropulsion` must be instructed to begin
  applying or stopping force via `Class.RocketPropulsion:Fire()|Fire()` or
  `Class.RocketPropulsion:Abort()|Abort()` respectively.

  You can detect when the assembly reaches its target using the
  `Class.RocketPropulsion.ReachedTarget|ReachedTarget` event which fires once
  the assembly is within the `Class.RocketPropulsion.TargetRadius|TargetRadius`
  of the `Class.RocketPropulsion.Target|Target` part.
code_samples: []
inherits:
  - BodyMover
tags:
  - Deprecated
deprecation_message: |
  This object is deprecated and should not be used for new work. Use
  `Class.LineForce` instead, and see the
  [legacy conversion notes](../../../physics/mover-constraints.md#legacy-mover-conversion).
properties:
  - name: RocketPropulsion.CartoonFactor
    summary: |
      Determines the tendency of the assembly to face the
      `Class.RocketPropulsion.Target|Target`.
    description: |
      This property determines the tendency of the assembly to face the
      `Class.RocketPropulsion.Target|Target`. By default, this property is set
      to `0.7`. If set to `0`, the assembly will make no effort to face the
      target.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Goals
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.MaxSpeed
    summary: |
      Determines the maximum speed at which the assembly will move toward the
      `Class.RocketPropulsion.Target|Target`.
    description: |
      This property determines the upper limit of the velocity at which the
      assembly will move toward the `Class.RocketPropulsion.Target|Target`.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Thrust
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.MaxThrust
    summary: |
      Determines the maximum amount of thrust that will be exerted to move the
      assembly.
    description: |
      This property determines the upper limit of the thrust that may be exerted
      to move the assembly. Assemblies that have high mass will require more
      thrust in order to remain airborne and thus track the
      `Class.RocketPropulsion.Target|Target`.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Thrust
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.MaxTorque
    summary: |
      Determines the maximum amount of torque that may be exerted to rotate the
      assembly towards the `Class.RocketPropulsion.Target|Target`.
    description: |
      This property determines the upper limit on the amount of torque that may
      be exerted in order to rotate the assembly towards the
      `Class.RocketPropulsion.Target|Target`. It functions similarly to
      `Class.BodyGyro.MaxTorque`.
    code_samples: []
    type: Vector3
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Turn
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.Target
    summary: |
      Determines the object towards which the assembly should follow/face.
    description: |
      This property determines the object towards which the `RocketPropulsion`
      will exert force/torque. If set to `nil`, the
      `Class.RocketPropulsion.TargetOffset|TargetOffset` will be used instead.
    code_samples: []
    type: BasePart
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Goals
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.TargetOffset
    summary: |
      Determines the world offset from the
      `Class.RocketPropulsion.Target|Target` toward which the force/torque is
      exerted.
    description: |
      This property determines the world offset from the
      `Class.RocketPropulsion.Target|Target`. It is especially useful when
      `Class.RocketPropulsion.Target|Target` is set to `nil`, since this
      property then acts as the target position.
    code_samples: []
    type: Vector3
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Goals
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.TargetRadius
    summary: |
      Determines the maximum distance from the
      `Class.RocketPropulsion.Target|Target` at which the assembly must be in
      order for `Class.RocketPropulsion.ReachedTarget|ReachedTarget` to be
      fired.
    description: |
      This property determines the maximum distance from the
      `Class.RocketPropulsion.Target|Target` at which the assembly must be in
      order for `Class.RocketPropulsion.ReachedTarget|ReachedTarget` to be
      fired. It does not affect the exerted forces in any way.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Goals
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.ThrustD
    summary: |
      Determines the dampening applied to the assembly in order to prevent it
      from overshooting the `Class.RocketPropulsion.Target|Target`.
    description: |
      This property is used to dampen the velocity of the assembly in order to
      prevent it from overshooting the `Class.RocketPropulsion.Target|Target`
      and causing a "rubber‑banding" effect. It behaves similarly to
      `Class.BodyPosition.D`.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Thrust
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.ThrustP
    summary: |
      Determines how aggressive of a force is applied in reaching the
      `Class.RocketPropulsion.Target|Target`.
    description: |
      This property determines how much power is used while applying force in
      order to reach the `Class.RocketPropulsion.Target|Target` position. The
      higher this value, the more power will be used and the faster it will be
      used. This property works similarly to `Class.BodyPosition.P`.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Thrust
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.TurnD
    summary: |
      Determines the amount of dampening that to use in reaching the
      `Class.RocketPropulsion.Target|Target`.
    description: |
      This property specifies how much dampening will be applied to the torque
      used to face the `Class.RocketPropulsion.Target|Target`. When the assembly
      approaches the goal orientation, it needs to decelerate, otherwise it will
      rotate past the goal and have to stop and re-accelerate back toward the
      goal. This often creates an undesirable "rubber‑banding" effect, avoided
      by applying dampening. The higher this value is set, the greater the
      dampening curve becomes, or the slower the part will approach the goal
      orientation.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Turn
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion.TurnP
    summary: |
      Determines how aggressive of a torque is applied in facing the
      `Class.RocketPropulsion.Target|Target`.
    description: |
      This property determines how much power is used while applying torque in
      order to face the `Class.RocketPropulsion.Target|Target`. The higher this
      value, the more power will be used and the faster it will be used.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Turn
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Physics
    writeCapabilities: []
methods:
  - name: RocketPropulsion:Abort
    summary: |
      Causes the assembly to stop moving toward its
      `Class.RocketPropulsion.Target|Target`.
    description: |
      Causes the assembly to stop moving toward its
      `Class.RocketPropulsion.Target|Target`.
    code_samples: []
    parameters: []
    returns:
      - type: ()
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion:Fire
    summary: |
      Causes the assembly to start moving toward its
      `Class.RocketPropulsion.Target|Target`.
    description: |
      Causes the assembly to start moving toward its
      `Class.RocketPropulsion.Target|Target`.
    code_samples: []
    parameters: []
    returns:
      - type: ()
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities:
      - Physics
    writeCapabilities: []
  - name: RocketPropulsion:fire
    summary: ''
    description: ''
    code_samples: []
    parameters: []
    returns:
      - type: ()
        summary: ''
    tags:
      - Deprecated
    deprecation_message: |
      This function is a deprecated variant of `Class.RocketPropulsion:Fire()`
      which should be used instead.
    security: None
    thread_safety: Unsafe
    capabilities:
      - Physics
    writeCapabilities: []
events:
  - name: RocketPropulsion.ReachedTarget
    summary: |
      Fires when the assembly comes within
      `Class.RocketPropulsion.TargetRadius|TargetRadius` of the
      `Class.RocketPropulsion.Target|Target`.
    description: |
      Fires when the assembly comes within
      `Class.RocketPropulsion.TargetRadius|TargetRadius` of the
      `Class.RocketPropulsion.Target|Target`.
    code_samples: []
    parameters: []
    tags: []
    deprecation_message: ''
    security: None
    capabilities:
      - Physics
    writeCapabilities: []
callbacks: []
