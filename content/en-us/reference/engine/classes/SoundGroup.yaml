name: SoundGroup
type: class
category: Sounds
memory_category: Internal
summary: |
  A `Class.SoundGroup` is used to manage the volume and sound effects on
  multiple `Class.Sound|Sounds` at once. `Class.Sound|Sounds` in the SoundGroup will have
  their volume and effects adjusted by the SoundGroup.
description: |
  A `Class.SoundGroup` is used to manage the volume and effects on multiple
  `Class.Sound|Sounds` at once. Every sound in the sound group will have its volume
  adjusted by the group's `Class.SoundGroup.Volume` property. If the SoundGroup
  has any `Class.SoundEffect|SoundEffects` as children, those effects will be applied to all
  of the `Class.Sound|Sounds` in the group.

  The `Class.SoundGroup.Volume` property acts as a multiplier, and thus sounds
  in a SoundGroup will retain their relative volumes when it is set. This means
  if a sound's volume is 0.5 and it is assigned to a SoundGroup with a volume of
  0.5, its effective volume will be 0.25.

  Grouping sounds of the same category has several uses for developers. One
  common usage of a sound group is to assign all of the music that can play in
  game to a SoundGroup called "music." Players could then easily toggle all
  music on or off.

  ## Setting sound groups

  A `Class.Sound` is added to a `Class.SoundGroup` by setting the
  `Class.Sound.SoundGroup` property of the `Class.Sound`. A `Class.Sound` can
  only be in one `Class.SoundGroup` at a time. Whilst they can be parented
  elsewhere, it is recommended to keep SoundGroups parented to the
  `Class.SoundService`. In the below example, a sound is parented to a
  SoundGroup called 'Music'.

      Sound.SoundGroup = game:GetService("SoundService"):FindFirstChild("Music")
code_samples:
  - Sound-SoundGroup
inherits:
  - Instance
tags: []
deprecation_message: ''
properties:
  - name: SoundGroup.Volume
    summary: |
      The volume multiplier applied to `Class.Sound|Sounds` that are in the
      `Class.SoundGroup`. This value ranges from 0 to 10.
    description: |
      The volume multiplier applied to `Class.Sound|Sounds` that are in the
      `Class.SoundGroup`. This value ranges from 0 to 10.

      This property acts as a multiplier, and thus sounds in a
      `Class.SoundGroup` will retain their relative volumes when it is set. This
      means if a sound's `Class.Sound.Volume` is 0.5 and it is assigned to a
      `Class.SoundGroup` with a volume of 0.5, its effective volume will be
      0.25.
    code_samples:
      - Sound-SoundGroup
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: State
    serialization:
      can_load: true
      can_save: true
methods: []
events: []
callbacks: []
