name: AudioListener
type: class
category:
memory_category: Internal
summary: |
  Records an audio stream from its surrounding
  `Class.AudioEmitter|AudioEmitters` in the 3D world.
description: |
  `Class.AudioListener` records an audio stream from its surrounding
  `Class.AudioEmitter|AudioEmitters` in the 3D world. It provides a single
  **Output** pin which can be connected to other pins via `Class.Wire|Wires`. If
  the parent is an `Class.Attachment`, `Class.Camera`, or `Class.PVInstance`,
  the parent's world `Datatype.CFrame` will be used for listening. If the parent
  is not one of these classes, the `Class.AudioListener` effectively hears
  nothing.
code_samples:
  - audio-wiring---camera-listener
inherits:
  - Instance
tags:
  - NotBrowsable
deprecation_message: ''
properties:
  - name: AudioListener.AudioInteractionGroup
    summary: |
      Controls which `Class.AudioEmitter|AudioEmitters` are audible to this
      `Class.AudioListener`.
    description: |
      Controls which `Class.AudioEmitter|AudioEmitters` are audible to this
      `Class.AudioListener`. Emitters that share an interaction group can be
      heard by this Listener.
    code_samples: []
    type: string
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Interactions
    serialization:
      can_load: true
      can_save: true
  - name: AudioListener.DistanceAttenuation
    summary: |
      Represents how the perceived volume of emitted sounds change as the
      distance between `Class.AudioEmitter|AudioEmitters` and the `Class.AudioListener`
      increases.
    description: |
      Represents a volume-over-distance curve that affects how loudly the
      `Class.AudioListener` hears any `Class.AudioEmitter|AudioEmitters`, based on the
      distance between them.

      This property is internal and can't be accessed by scripts; it exists to
      support replication. See
      `Class.AudioListener:SetDistanceAttenuation()|SetDistanceAttenuation()` for
      usage details.
    code_samples: []
    type: BinaryString
    tags: []
    deprecation_message: ''
    security:
      read: RobloxSecurity
      write: RobloxSecurity
    thread_safety: ReadSafe
    category: Listening
    serialization:
      can_load: true
      can_save: true
methods:
  - name: AudioListener:GetConnectedWires
    summary: ''
    description: ''
    code_samples: []
    parameters:
      - name: pin
        type: string
        default:
        summary: ''
    returns:
      - type: Objects
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: AudioListener:GetDistanceAttenuation
    summary: |
      Gets the distance attenuation curve that the `Class.AudioListener` is
      using, or an empty table if it's using the default curve.
    description: |
      Returns a table mapping distance to volume. Keys are numbers greater than
      or equal to 0, while values are numbers between 0 and 1 (inclusive)
      describing how volume attenuates over distance. This method returns an
      empty table if the default distance attenuation curve is being used.
    code_samples: []
    parameters: []
    returns:
      - type: Dictionary
        summary: ''
    tags:
      - CustomLuaState
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: AudioListener:GetInteractingEmitters
    summary: ''
    description: ''
    code_samples: []
    parameters: []
    returns:
      - type: Objects
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: AudioListener:SetDistanceAttenuation
    summary: |
      Sets the distance attenuation curve that the `Class.AudioListener` should
      use, or uses an inverse rolloff curve if none is provided.
    description: |
      Sets a volume-over-distance curve that affects how loudly the
      `Class.AudioListener` will hear any `Class.AudioEmitter|AudioEmitters`, based on the
      distance between them.

      The curve is represented by a table mapping distance keys to volume
      values. Keys are expected to be unique numbers greater than or equal to 0,
      while values are expected to be numbers between 0 and 1 (inclusive).
      Tables containing up to 400 key-value pairs are supported.

      The volume of a `Class.AudioEmitter` from the perspective of the
      `Class.AudioListener` at a distance `d` is determined by linearly
      interpolating between the volume levels for the points on the curve whose
      distance values are directly above and below `d`. If there is either no
      point below `d` or no point above `d`, the volume level of the other point
      is chosen. Essentially, the curve is a sequence of points connected by
      straight lines, and beyond its left and right endpoints the curve extends
      outward infinitely at their respective volume levels.

      This volume will be multiplied with the volume from the
      `Class.AudioEmitter.DistanceAttenuation` curve of the `Class.AudioEmitter`
      to obtain the final audibility.

      If the table is empty or `nil`, the `Class.AudioListener` defaults to applying
      a constant volume of 1 everywhere.
    code_samples: []
    parameters:
      - name: curve
        type: Dictionary
        default:
        summary: ''
    returns:
      - type: void
        summary: ''
    tags:
      - CustomLuaState
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
events: []
callbacks: []
