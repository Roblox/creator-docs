name: Accessory
type: class
category: Avatar
memory_category: Instances
summary: |
  An item that a Character can wear.
description: |
  The Accessory Instance is the parent Instance of all accessories (regardless
  of their specific accessory type). It typically has a child Handle with a
  child Attachment and a WrapLayer in the case of Layered Clothing.

  The Accessory class is the successor to the legacy Hat system. It's
  cross-compatible with both the legacy R6 character system and the new R15
  character system.

  If you insert an `Class.Attachment` into the Accessory's Handle with the same
  name as an `Class.Attachment` in one of the character's limbs, they connect
  and ignore properties inherited from the `Class.Accoutrement` class.
  Otherwise, the Accessory functions identically to a `Class.Hat`.

  Note: If there are two matching `Attachments`, the resulting `Class.Weld` is a
  child of the Accessory's Handle. This differs from the legacy behavior of Hats
  where the Weld is always a child of the Head of the character.
code_samples:
inherits:
  - Accoutrement
tags: []
deprecation_message: ''
properties:
  - name: Accessory.AccessoryType
    summary: |
      Specifies the AccessoryType of the Accessory (eg. Hat, Tshirt, Waist).
    description: |
      Specifies the AccessoryType of the Accessory. Is
      `Enum.AccessoryType|AccessoryType.Unknown` unless you equip the Accessory
      through the player spawning process or
      `Class.Humanoid:ApplyDescription()`. If available on the Marketplace, you
      can set `Enum.AccessoryType` to categorize the Accessory item (for
      example, "Hat" or "Face").
    code_samples:
    type: AccessoryType
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
methods: []
events: []
callbacks: []
