name: AccessoryDescription
type: class
category:
memory_category: Instances
summary: |
  Describes the appearance of an `Class.Accessory` for the
  `Class.HumanoidDescription`.
description: |
  **AccessoryDescription** is an object that stores the description for an
  `Class.Accessory`. It is meant to be placed underneath a
  `Class.HumanoidDescription` in order to work with
  `Class.Humanoid:ApplyDescription()`.
code_samples: []
inherits:
  - Instance
tags: []
deprecation_message: ''
properties:
  - name: AccessoryDescription.AccessoryType
    summary: |
      The `Enum.AccessoryType` of the `Class.Accessory` referred to by this
      description.
    description: |
      The `Enum.AccessoryType` of the `Class.Accessory` referred to by this
      description.
    code_samples: []
    type: AccessoryType
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
  - name: AccessoryDescription.AssetId
    summary: |
      The asset ID that should be applied when applying this
      `Class.AccessoryDescription`.
    description: |
      The asset ID that should be applied when applying this
      `Class.AccessoryDescription`.
    code_samples: []
    type: int64
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
  - name: AccessoryDescription.Instance
    summary: |
      A reference to the `Class.Instance` that should be applied when applying
      this `Class.AccessoryDescription`.
    description: |
      A reference to the `Class.Instance` that should be applied when applying
      this `Class.AccessoryDescription`. This property can be used instead of
      `Class.AccessoryDescription.AssetId|AssetId` to apply accessories without
      uploading them to the platform.
    code_samples: []
    type: Instance
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
  - name: AccessoryDescription.IsLayered
    summary: |
      Whether the `Class.Accessory` is layered or rigid.
    description: |
      Whether the `Class.Accessory` is layered or rigid. This will be updated
      after calling `Class.Humanoid:ApplyDescription()` if this property doesn't
      match the actual `Class.Accessory` contents.
    code_samples: []
    type: bool
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
  - name: AccessoryDescription.Order
    summary: |
      The layered clothing sort order, if the `Class.Accessory` is layered.
    description: |
      The `Class.WrapLayer.Order` value when applying the `Class.Accessory`, if
      it is layered.
    code_samples: []
    type: int
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
  - name: AccessoryDescription.Position
    summary: |
      The accessory adjustment position offset, if the `Class.Accessory` is
      rigid.
    description: |
      The accessory adjustment position offset. Only applies if the
      `Class.Accessory` is rigid.
    code_samples: []
    type: Vector3
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
  - name: AccessoryDescription.Puffiness
    summary: |
      The layered clothing puffiness, if the `Class.Accessory` is layered.
    description: |
      The `Class.WrapLayer.Puffiness` value when applying the `Class.Accessory`,
      if it is layered.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
  - name: AccessoryDescription.Rotation
    summary: |
      The accessory adjustment rotation offset, if the `Class.Accessory` is
      rigid.
    description: |
      The accessory adjustment rotation offset. Only applies if the
      `Class.Accessory` is rigid.
    code_samples: []
    type: Vector3
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
  - name: AccessoryDescription.Scale
    summary: |
      The accessory adjustment scale, if the `Class.Accessory` is rigid.
    description: |
      The accessory adjustment scale. Only applies if the `Class.Accessory` is
      rigid.
    code_samples: []
    type: Vector3
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities:
      - Avatar
    writeCapabilities: []
methods:
  - name: AccessoryDescription:GetAppliedInstance
    summary: |
      Returns the applied `Class.Accessory`.
    description: |
      Returns the applied `Class.Accessory` if this `Class.AccessoryDescription`
      is the child of an applied `Class.HumanoidDescription` parented to a
      `Class.Humanoid`.
    code_samples: []
    parameters: []
    returns:
      - type: Instance
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
events: []
callbacks: []
