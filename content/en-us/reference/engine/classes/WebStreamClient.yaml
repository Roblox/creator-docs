# This file is automatically generated. Please don't edit it manually.
# To submit a bug report on the content, see
# https://devforum.roblox.com/c/bug-reports/documentation-issues/72

name: WebStreamClient
type: class
memory_category: Instances
summary: |
  Maintains a streaming connection.
description: |
  Maintains a streaming connection. To process stream events as they arrive,
  connect callback functions to each event using
  `Datatype.RBXScriptSignal:Connect()`.
code_samples: []
inherits:
  - Object
descendants: []
tags:
  - NotCreatable
  - NotReplicated
deprecation_message: ''
properties:
  - name: WebStreamClient.ConnectionState
    summary: |
      The current `Enum.WebStreamClientState` of the client.
    description: |
      The current `Enum.WebStreamClientState` of the client.
    code_samples: []
    type: WebStreamClientState
    tags:
      - ReadOnly
      - NotReplicated
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: false
      can_save: true
    capabilities: []
methods:
  - name: WebStreamClient:Close
    summary: |
      Closes the client, aborting the ongoing request.
    description: |
      Closes the client, aborting the ongoing request. If successful, fires the
      `Class.WebStreamClient.Closed` event.
    code_samples: []
    parameters: []
    returns:
      - type: ()
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
  - name: WebStreamClient:Send
    summary: |
      Enqueues data to be transmitted to the server over the streaming
      connection.
    description: |
      Enqueues data to be transmitted to the server over the connection. Only
      works on clients created with `Enum.WebStreamClientType.WebSocket`. For
      other client types it does nothing.
    code_samples: []
    parameters:
      - name: data
        type: string
        default:
        summary: |
          Text string to send to the server.
    returns:
      - type: ()
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
events:
  - name: WebStreamClient.Closed
    summary: ''
    description: |
      Fires when the server closes the connection succesfully or the user calls
      `Class.WebStreamClient:Close()`
    code_samples: []
    parameters: []
    tags: []
    deprecation_message: ''
    security: None
    capabilities: []
  - name: WebStreamClient.Error
    summary: |
      Fires if an error is received while establishing the connection or during
      the connection lifetime.
    description: |
      Fires if an error is received while establishing the connection or during
      the connection lifetime.
    code_samples: []
    parameters:
      - name: responseStatusCode
        type: int
        default:
        summary: |
          The standard HTTP error status code (e.g., 404, 500).
      - name: errorMessage
        type: string
        default:
        summary: |
          A descriptive message containing details about the error.
    tags: []
    deprecation_message: ''
    security: None
    capabilities: []
  - name: WebStreamClient.MessageReceived
    summary: |
      Fires each time a message is received from the server.
    description: |
      Fires each time a message is received from the server. The format differs
      based on the `Enum.WebStreamClientType`.
    code_samples: []
    parameters:
      - name: message
        type: string
        default:
        summary: |
          The message data payload received from the server stream.
    tags: []
    deprecation_message: ''
    security: None
    capabilities: []
  - name: WebStreamClient.Opened
    summary: |
      Fires when the a connection is successfully established between the client
      and server, allowing for events to begin streaming.
    description: |
      Fires when the a connection is successfully established between the client
      and server, allowing for events to begin streaming. Provides any response
      headers in raw format, which can be used for validation.
    code_samples: []
    parameters:
      - name: responseStatusCode
        type: int
        default:
        summary: |
          The standard HTTP success status code (e.g., 200).
      - name: headers
        type: string
        default:
        summary: |
          The raw HTTP response headers from the server.
    tags: []
    deprecation_message: ''
    security: None
    capabilities: []
callbacks: []
