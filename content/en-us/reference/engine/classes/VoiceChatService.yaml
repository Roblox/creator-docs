name: VoiceChatService
type: class
category:
memory_category: Instances
summary: |
  **VoiceChatService** is responsible for voice chat's high-level functionality.
description: |
  **VoiceChatService** is responsible for voice chat's high-level functionality.
  This mostly consists of configuration options, and functions that are not
  specifically-controlled by more-specific instances.
code_samples:
inherits:
  - Instance
tags:
  - NotCreatable
  - Service
deprecation_message: ''
properties:
  - name: VoiceChatService.EnableDefaultVoice
    summary: |
      Controls whether each voice-eligible player can be heard as though they
      were speaking through their character.
    description: |
      When enabled, each voice-eligible player can be heard as though they were
      speaking through their character. The implementation details of the voice
      setup depend on `Class.VoiceChatService.UseAudioApi|UseAudioApi`.

      When `Class.VoiceChatService.UseAudioApi|UseAudioApi` is
      `Enum.AudioApiRollout|Disabled`, disabling the default voice setup
      effectively disables voice chat altogether.
    code_samples: []
    type: bool
    tags: []
    deprecation_message: ''
    security:
      read: PluginSecurity
      write: PluginSecurity
    thread_safety: ReadSafe
    category: Behavior
    serialization:
      can_load: true
      can_save: true
    capabilities: []
    writeCapabilities: []
  - name: VoiceChatService.UseAudioApi
    summary: |
      Controls whether voice chat is represented and controlled by
      `Class.AudioDeviceInput` objects.
    description: |
      If `Enum.AudioApiRollout|Enabled`, the voice chat setup is represented and
      controlled by `Class.AudioDeviceInput` objects. More specifically:

      - An `Class.AudioDeviceInput` will be created and parented to each
        voice-eligible `Class.Player`.
      - An `Class.AudioEmitter` will be created and parented to each
        voice-eligible player's `Class.Player.Character`.
      - An `Class.AudioListener` will be created and parented to
        `Class.Workspace.CurrentCamera`.

      If `Enum.AudioApiRollout|Disabled`, the voice chat setup is done through
      an internal-only system.

      Currently, setting this to `Enum.AudioApiRollout|Automatic` has the same
      meaning as `Enum.AudioApiRollout|Disabled`. However, in the future,
      `Enum.AudioApiRollout|Automatic` will become
      `Enum.AudioApiRollout|Enabled`, so that new experiences can achieve
      greater customization over voice.
    code_samples: []
    type: AudioApiRollout
    tags: []
    deprecation_message: ''
    security:
      read: PluginSecurity
      write: PluginSecurity
    thread_safety: ReadSafe
    category: Behavior
    serialization:
      can_load: true
      can_save: true
    capabilities: []
    writeCapabilities: []
methods:
  - name: VoiceChatService:rejoinVoice
    summary: ''
    description: ''
    code_samples: []
    parameters: []
    returns:
      - type: void
        summary: ''
    tags: []
    deprecation_message: ''
    security: RobloxScriptSecurity
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
  - name: VoiceChatService:IsVoiceEnabledForUserIdAsync
    summary: |
      Returns whether or not the given user has voice enabled.
    description: |
      Returns whether or not the given user has voice enabled. On the
      client-side, this can only be used to check the voice status of the local
      player. On the server-side, this can only check the voice status for
      players in that server.

      This function can throw an error if the HTTP call fails.

      ```lua
      local Players = game:GetService("Players")
      local VoiceChatService = game:GetService("VoiceChatService")

      local localPlayer = Players.LocalPlayer
      local success, enabled = pcall(function()
      	return VoiceChatService:IsVoiceEnabledForUserIdAsync(localPlayer.UserId)
      end)
      if success and enabled then
      	print("Voice chat enabled!")
      end
      ```
    code_samples:
    parameters:
      - name: userId
        type: int64
        default:
        summary: |
          The `Class.Player.UserId` to check.
    returns:
      - type: bool
        summary: |
          If that user has voice enabled.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
    capabilities: []
    writeCapabilities: []
events: []
callbacks: []
