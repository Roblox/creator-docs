name: CaptureService
type: class
category:
memory_category: Instances
summary: 'A service which provides developer control over screenshot capture features.'
description: 'CaptureService is a client-sided service that allows users to capture areas of your experience and share them with other players. CaptureService is useful for a painting experience to share artwork with players, or an adventure experience to help users remember their achievements later on.'
code_samples: []
inherits:
  - Instance
tags:
  - NotCreatable
  - Service
  - NotReplicated
deprecation_message: ''
properties: []
methods:
  - name: CaptureService:CaptureScreenshot
    summary: 'Take a screenshot associated with the returned contentId.'
    description: 'Take a screenshot that can be identified by a temporary contentId. This function does not save the screenshot to the gallery.'
    code_samples: []
    parameters:
      - name: onCaptureReady
        type: Function
        default:
        summary: ''
    returns:
      - type: void
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: CaptureService:PromptSaveCapturesToGallery
    summary: "Save the specified contentIds to the player's gallery."
    description: 'Ask the `Class.Players.LocalPlayer|LocalPlayer` to save the specified screenshots to their gallery. <Alert severity="info">The gallery can be accessed in the Captures tab of the Roblox escape menu.</Alert>'
    code_samples: []
    parameters:
      - name: contentIds
        type: Array
        default:
        summary: 'The contentIds of the screenshots that will save.'
      - name: resultCallback
        type: Function
        default:
        summary: ''
    returns:
      - type: void
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: CaptureService:PromptShareCapture
    summary: "Ask to share screenshots with the user's share sheet."
    description: 'Ask the `Class.Players.LocalPlayer|LocalPlayer` to share the specified screenshots with their contacts. <Alert severity="warning">This function is only available for +13 users. </Alert>'
    code_samples: []
    parameters:
      - name: contentId
        type: Content
        default:
        summary: 'The contentId of the screenshot that will be shared.'
      - name: launchData
        type: string
        default:
        summary: ''
      - name: onAcceptedCallback
        type: Function
        default:
        summary: ''
      - name: onDeniedCallback
        type: Function
        default:
        summary: ''
    returns:
      - type: void
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
events:
  - name: CaptureService.CaptureBegan
    summary: ''
    description: ''
    code_samples: []
    parameters: []
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: CaptureService.CaptureEnded
    summary: ''
    description: ''
    code_samples: []
    parameters: []
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: CaptureService.CaptureSaved
    summary: ''
    description: ''
    code_samples: []
    parameters:
      - name: captureInfo
        type: Dictionary
        default:
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: CaptureService.UserCaptureSaved
    summary: ''
    description: ''
    code_samples: []
    parameters:
      - name: captureContentId
        type: Content
        default:
        summary: ''
    tags: []
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
callbacks: []
