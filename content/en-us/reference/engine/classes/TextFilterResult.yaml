name: TextFilterResult
type: class
category: Social
memory_category: Instances
summary: ''
description: |
  Represents the result of a call to `Class.TextService:FilterStringAsync()`.
  Used to distribute a filtered string accordingly.
code_samples:
inherits:
  - Instance
tags:
  - NotCreatable
  - NotReplicated
deprecation_message: ''
properties: []
methods:
  - name: TextFilterResult:GetChatForUserAsync
    summary: |
      Returns the text in a properly filtered manner for the specified
      `Class.Player.UserId`.
    description: |
      This method returns the text in a properly filtered manner for the
      specified `Class.Player.UserId` using the least restrictive filtering
      appropriate for that user, with `Class.Chat` privacy settings of both
      users enforced. This should be used in the context of chats between
      players, although there are some other cases where text filtering is
      required.

      The returned string should only be shown to the target user, as it might
      not be appropriate for all users.

      If this method throws an error, the string should **not** be displayed to
      the user. Cases for error include:

      - The two users are not allowed to chat, for example if
      `Class.Chat:CanUserChatAsync()` would return `false` for the given sender
      and receiver.
      - The user with the ID `toUserId` is not online on the current server.

      This function will return immediately in most cases, although it will
      yield if the target user has just joined the server and their filtering
      info is not yet loaded.
    code_samples:
    parameters:
      - name: toUserId
        type: int64
        default:
        summary: |
          `Class.Player.UserId` of the user being chatted.
    returns:
      - type: string
        summary: |
          Filtered text string.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: TextFilterResult:GetNonChatStringForBroadcastAsync
    summary: |
      Returns the text in a properly filtered manner for all users.
    description: |
      Returns the text in a properly filtered manner for all users. This should
      be used in the context of non-chat text that every user can see, such as
      for a dialog that lets a user write a message on a sign, visible to all
      users on the server even after the author has left.
    code_samples:
    parameters: []
    returns:
      - type: string
        summary: |
          Filtered text string.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: TextFilterResult:GetNonChatStringForUserAsync
    summary: |
      Returns the text in a properly filtered manner for the specified
      `Class.Player.UserId` based on age and other details.
    description: |
      Returns the text in a properly filtered manner for the specified
      `Class.Player.UserId` based on age and other details. This should be used
      in the context of non-chat text that one specific user can see, such as
      the name of a pet.
    code_samples:
    parameters:
      - name: toUserId
        type: int64
        default:
        summary: |
          `Class.Player.UserId` of the user intended to see/receive the text.
    returns:
      - type: string
        summary: |
          Filtered text string.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
events: []
callbacks: []
