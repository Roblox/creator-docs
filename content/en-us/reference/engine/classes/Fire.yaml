# This file is automatically generated. Please don't edit it manually.
# To submit a bug report on the content, see
# https://devforum.roblox.com/c/bug-reports/documentation-issues/72

name: Fire
type: class
memory_category: Instances
summary: |
  A preconfigured particle emitter with the visual aesthetic of fire.
description: |
  `Class.Fire` is one of several preconfigured particle-emitting classes,
  alongside `Class.Smoke`, `Class.Sparkles`, and others. Like the others, it
  emits particles when parented to a `Class.BasePart` or an `Class.Attachment`
  while `Class.Fire.Enabled|Enabled`. This object is useful to create a quick
  visual effect for fire, but for more detailed work it's recommended that you
  use a `Class.ParticleEmitter` instead.

  Particles emit from the center of the parent in an upward (**+Y**) direction,
  but a negative `Class.Fire.Heat|Heat` value may be used to emit particles
  downward (**-Y**). Using an `Class.Attachment` as the parent instead of a
  `Class.BasePart` allows for the emission position/direction to be modified by
  changing the `Class.Attachment.CFrame` or related properties.

  `Class.Fire` objects consist of two emitters, each affected in various ways by
  the `Class.Fire.Size|Size`, `Class.Fire.Heat|Heat`, `Class.Fire.Color|Color`,
  and `Class.Fire.SecondaryColor|SecondaryColor` properties. Particles which
  emit from the smaller, secondary emitter have a significantly longer lifetime
  (and rise farther) than those emitted by the primary emitter.

  When `Class.Fire.Enabled|Enabled` is off, existing particles continue to
  render until they expire. However, if the `Class.Fire` object's
  `Class.Instance.Parent|Parent` is set to `nil`, all existing particles
  immediately disappear, similar to the behavior of
  `Class.ParticleEmitter:Clear()`.

  `Class.Fire` objects emit no light on their own. To help create a cohesive
  environment around a burning object, try adding a `Class.PointLight` with an
  orange `Class.Light.Color|Color`.
code_samples:
  - Lighting-Torches
inherits:
  - Instance
descendants: []
tags: []
deprecation_message: ''
properties:
  - name: Fire.Color
    summary: |
      Determines the color of the primary (outer) flame particles.
    description: |
      This property determines the color of the larger particles emitted by a
      `Class.Fire` object. It is essentially the color of the outer portion of
      the flame.

      In general, the cooler flames are on the outside of a fire. Therefore,
      fire looks more realistic if the outer portions are red or orange-yellow.
      A fire that is bright all throughout doesn't look very realistic, so avoid
      setting this property to yellow or white.
    code_samples: []
    type: Color3
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities: []
  - name: Fire.Enabled
    summary: |
      Determines whether flame particles are emit.
    description: |
      This property, much like `Class.ParticleEmitter.Enabled`, determines
      whether flame particles are emitted. Any particles already emitted will
      continue to render until their lifetime expires.

      Since all fire particles are destroyed when the `Class.Fire` object's
      `Class.Instance.Parent|Parent` is set to `nil`, this property is useful in
      allowing existing particles the opportunity to expire before destroying
      the `Class.Fire` object altogether (see the code example below).

      ```
      local Debris = game:GetService("Debris")

      local function douseFlames(fire)
      	fire.Enabled = false -- No more new particles
      	Debris:AddItem(fire, 2) -- Remove the object after existing particles have expired
      end

      douseFlames(part.Fire)
      ```
    code_samples: []
    type: boolean
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities: []
  - name: Fire.Heat
    summary: |
      Determines the velocity at which particles are emit.
    description: |
      This property determines how fast particles are emitted from the
      `Class.Fire` object. It is limited to the range of `-25` to `25`
      inclusive. Positive values are in the top (**+Y**) direction of the parent
      `Class.BasePart` or `Class.Attachment`, while negative values are in the
      downward (**-Y**) direction. It also affects the
      `Class.ParticleEmitter.Acceleration` of the inner particles.
    code_samples: []
    type: float
    tags:
      - NotReplicated
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: false
    capabilities: []
  - name: Fire.LocalTransparencyModifier
    summary: |
      A multiplier for the `Class.Fire` object's transparency that is only
      visible to the local client.
    description: |
      This property is a multiplier for the `Class.Fire` object's transparency
      that is only visible to the local client. It does not replicate from
      client to server and is useful for when the object should appear
      differently for a specific client.
    code_samples: []
    type: float
    tags:
      - Hidden
      - NotReplicated
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: false
      can_save: false
    capabilities: []
  - name: Fire.SecondaryColor
    summary: |
      Determines the color of the of the secondary (inner) flame particles.
    description: |
      This property determines the color of the smaller particles emitted by a
      `Class.Fire` object. It is essentially the color of the inner portion of
      the flame.

      Note that the inner particles use a `Class.ParticleEmitter.LightEmission`
      of `1`, so darker colors will instead cause the particles to appear
      transparent, and black will stop rendering inner particles altogether.
    code_samples: []
    type: Color3
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities: []
  - name: Fire.Size
    summary: |
      Determines the size of the flame particles.
    description: |
      This property determines the size of the flame particles. It must be in
      the range of `2` to `30`. Unlike `Class.ParticleEmitter.Size`, the actual
      size of the flames will not match 1:1 with the equivalent size in studs;
      it is somewhat smaller.

      If you add a `Class.PointLight` as a sibling to the `Class.Fire` object to
      generate light, try setting the light's
      `Class.PointLight.Brightness|Brightness` and
      `Class.PointLight.Range|Range` proportional to this property so that
      larger flames produce more light.
    code_samples: []
    type: float
    tags:
      - NotReplicated
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: false
    capabilities: []
  - name: Fire.TimeScale
    summary: |
      Controls the speed of the particle effect.
    description: |
      A value between `0` and `1` than controls the speed of the particle
      effect. `1` runs at normal speed, `0.5` runs at half speed, and `0`
      freezes time.
    code_samples: []
    type: float
    tags: []
    deprecation_message: ''
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: true
    capabilities: []
  - name: Fire.size
    summary: ''
    description: ''
    code_samples: []
    type: float
    tags:
      - NotReplicated
      - Deprecated
    deprecation_message: |
      This property is a deprecated variant of `Class.Fire.Size` which should be
      used instead.
    security:
      read: None
      write: None
    thread_safety: ReadSafe
    category: Data
    serialization:
      can_load: true
      can_save: false
    capabilities: []
methods: []
events: []
callbacks: []
