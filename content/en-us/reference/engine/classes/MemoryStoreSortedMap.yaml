name: MemoryStoreSortedMap
type: class
category:
memory_category: Instances
summary: |
  Provides access to a sorted map within MemoryStore.
description: |
  Provides access to a sorted map within MemoryStore. A sorted map is a
  collection of items where string keys are associated with arbitrary values (up
  to the maximum allowed size -- see
  [Memory Stores](../../../cloud-services/memory-stores/sorted-map.md)). Each
  item can also have an optional sort key, which can be a number or a string. In
  the ordering of items, the sort key takes precedence if provided. Numeric sort
  keys are sorted before string sort keys. After sorting by sort key, the rest
  of the items are arranged in alphabetical order by key.
code_samples:
inherits:
  - Instance
tags:
  - NotCreatable
  - NotReplicated
deprecation_message: ''
properties: []
methods:
  - name: MemoryStoreSortedMap:GetAsync
    summary: |
      Retrieves the value and sort key of a key in the sorted map.
    description: |
      Retrieves the value and sort key of a key in the sorted map.
    code_samples:
    parameters:
      - name: key
        type: string
        default:
        summary: |
          Key whose value to retrieve.
    returns:
      - type: Tuple
        summary: |
          A tuple of two values:

          - Key value, or nil -- if there's no item with the specified key.
          - Sort key, or nil -- if there's no sort key associated with the
            specified key.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: MemoryStoreSortedMap:GetRangeAsync
    summary: |
      Retrieves items within a sorted range of keys.
    description: |
      Gets items within a sorted range of keys.
    code_samples:
      - retrieving-memorystore-keys
    parameters:
      - name: direction
        type: SortDirection
        default:
        summary: |
          Sort direction, ascending or descending.
      - name: count
        type: int
        default:
        summary: |
          The number of items to retrieve; the maximum allowed value for this
          parameter is 200.
      - name: exclusiveLowerBound
        type: Variant
        default:
        summary: |
          **(Optional)** Lower bound, exclusive, for the returned keys. This is
          provided as a table where one or both of Key and sort key can be
          specified: { key: string, sortKey: Variant } .
      - name: exclusiveUpperBound
        type: Variant
        default:
        summary: |
          **(Optional)** Upper bound, exclusive, for the returned keys. This is
          provided as a table where one or both of Key and sort key can be
          specified: { key: string, sortKey: Variant } .
    returns:
      - type: Array
        summary: |
          Item keys, values and sort keys in the requested range.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: MemoryStoreSortedMap:RemoveAsync
    summary: |
      Removes the provided key from the sorted map.
    description: |
      Removes the provided key from the sorted map.
    code_samples:
    parameters:
      - name: key
        type: string
        default:
        summary: |
          Key to remove.
    returns:
      - type: void
        summary: ''
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: MemoryStoreSortedMap:SetAsync
    summary: |
      Sets the value of a key.
    description: |
      Sets the value of the key overwriting any existing key value.
    code_samples:
    parameters:
      - name: key
        type: string
        default:
        summary: |
          Key whose value to set.
      - name: value
        type: Variant
        default:
        summary: |
          Key value to set.
      - name: expiration
        type: int64
        default:
        summary: |
          Item expiration, in seconds. The item is automatically removed from
          the sorted map once the expiration duration is reached. The maximum
          expiration time is 45 days (3,888,000 seconds).
      - name: sortKey
        type: Variant
        default:
        summary: |
          **(Optional)** Sort key to set for this key. Accepted types are a
          number (integer or decimal) or a string.
    returns:
      - type: bool
        summary: ''
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
  - name: MemoryStoreSortedMap:UpdateAsync
    summary: |
      Retrieves the value and sort key of a key from a sorted map and updates it
      with a new value and sort key.
    description: |
      Retrieves the value and sort key of a key from a sorted map and lets you
      update it to a new value and sort key via a callback function.

      This method accepts a callback function that transforms the old value and
      old sort key into the updated value and updated sort key as required. The
      method retrieves the existing key value and sort key and passes it to the
      transform function which returns the new value and sort key for the item,
      with these exceptions:

      - If the key does not exist, the old value and old sort key passed to the
        function will be nil.
      - If the function returns nil, the update is canceled.

      The new value and new sort key is saved only if the key was not updated
      (e.g. by a different game server) since the moment it was read. If the
      value or sort key did change, the transform function is invoked again with
      the most recent item value and sort key. This cycle repeats until the
      value and sort key are saved successfully or the transform function
      returns nil to abort the operation.
    code_samples:
      - updating-a-memorystore
    parameters:
      - name: key
        type: string
        default:
        summary: |
          Key whose value to update.
      - name: transformFunction
        type: Function
        default:
        summary: |
          A function which you need to provide. The function takes the key's old
          value and old sort key as input and returns the new value and new sort
          key.
      - name: expiration
        type: int64
        default:
        summary: |
          Item expiration time, in seconds, after which the item will be
          automatically removed from the sorted map. The maximum expiration time
          is 45 days (3,888,000 seconds).
    returns:
      - type: Tuple
        summary: |
          The return value is a tuple of the last value and sort key returned by
          the transform function.
    tags:
      - Yields
    deprecation_message: ''
    security: None
    thread_safety: Unsafe
events: []
callbacks: []
